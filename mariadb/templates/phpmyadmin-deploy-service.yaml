{{ if .Values.global.devtools.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-phpmyadmin
  labels:
    app: {{ .Release.Name }}-phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-phpmyadmin
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-phpmyadmin
      annotations:
        rollme: {{ .Values.global.devtools.phpmyadmin.sha256 | quote }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/credentials-secret.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: {{ .Release.Name }}-init-mariadb
          image: {{ template "busybox.image" . }}
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "until nc {{ .Release.Name }}-mariadb 3306 -w 1; do echo waiting for mariadb; sleep 5; done" ]
      containers:
        - name: {{ .Release.Name }}-phpmyadmin
          image: {{ template "phpmyadmin.image" . }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb-secret
                  key: mariadb-root-password
            - name: PMA_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-mariadb-general-configmap
                  key: mariadb-host
            - name: PMA_ABSOLUTE_URI
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-mariadb-tools-configmap
                  key: pma-absolute-uri
          ports:
            - containerPort: 80
      imagePullSecrets:
      {{- if and (.Values.global.dockerProxyCredentials.username) (.Values.global.dockerProxyCredentials.password) }}
        - name: {{ .Release.Name }}-mariadb-dockerproxycred
      {{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-phpmyadmin
spec:
  selector:
    app: {{ .Release.Name }}-phpmyadmin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
{{ end }}
